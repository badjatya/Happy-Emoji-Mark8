{"version":3,"sources":["img/emoji.png","App.js","index.js"],"names":["emojiDictionary","emojiList","Object","keys","App","useState","emoji","setEmoji","emojiMean","setEmojiMean","className","src","emojiImage","alt","type","placeholder","onChange","event","inputEmoji","target","value","map","onClick","clickEventHandler","href","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAAe,G,KAAA,IAA0B,mC,OCMnCA,EAAkB,CACtB,eAAM,UACN,eAAM,YACN,eAAM,MACN,eAAM,cACN,eAAM,OACN,eAAM,aAGFC,EAAYC,OAAOC,KAAKH,GAkEfI,EAhEH,WAAO,IAAD,EACUC,mBAAS,MADnB,mBACTC,EADS,KACFC,EADE,OAEkBF,mBAAS,mCAF3B,mBAETG,EAFS,KAEEC,EAFF,KAkBhB,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,+CAGF,iCACE,qBAAKA,UAAU,WAAf,SACE,qBAAKC,IAAKC,EAAYC,IAAI,YAE5B,sBAAKH,UAAU,YAAf,UACE,uBACEI,KAAK,OACLC,YAAY,wBACZC,SA5Bc,SAACC,GACvB,IAAMC,EAAaD,EAAME,OAAOC,MAChCb,EAASW,GAEPT,EADES,KAAclB,EACHA,EAAgBkB,GAEhB,sCAwBT,8BACGZ,EADH,IACWE,KAGX,qBAAKE,UAAU,qBAAf,SACGT,EAAUoB,KAAI,SAACf,GAAD,OACb,sBAAkBgB,QAAS,kBA1Bb,SAAChB,GACzBC,EAASD,GACTG,EAAaT,EAAgBM,IAwBciB,CAAkBjB,IAAnD,SACGA,GADQA,cAQnB,mCACE,kEACA,mBAAGkB,KAAK,wCAAR,SACE,mBAAGC,MAAM,sBAEX,mBAAGD,KAAK,qCAAR,SACE,mBAAGC,MAAM,qBAEX,mBAAGD,KAAK,8BAAR,SACE,mBAAGC,MAAM,2BCtEnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5f253b01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/emoji.d9abcebd.png\";","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// Importing image\nimport emojiImage from \"./img/emoji.png\";\n\nconst emojiDictionary = {\n  \"üòä\": \"Smiling\",\n  \"üò≥\": \"Disbelief\",\n  \"üòî\": \"Sad\",\n  \"ü•°\": \"Takeout Box\",\n  \"‚ù§Ô∏è\": \"Love\",\n  \"üòë\": \"Annoyance\",\n};\n\nconst emojiList = Object.keys(emojiDictionary);\n\nconst App = () => {\n  const [emoji, setEmoji] = useState(null);\n  const [emojiMean, setEmojiMean] = useState(\"Translation Will Appear Here...\");\n\n  const onChangeHandler = (event) => {\n    const inputEmoji = event.target.value;\n    setEmoji(inputEmoji);\n    if (inputEmoji in emojiDictionary) {\n      setEmojiMean(emojiDictionary[inputEmoji]);\n    } else {\n      setEmojiMean(\"failure to recognize this emoji\");\n    }\n  };\n\n  const clickEventHandler = (emoji) => {\n    setEmoji(emoji);\n    setEmojiMean(emojiDictionary[emoji]);\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Happy Emoji</h1>\n      </header>\n\n      <main>\n        <div className=\"left-col\">\n          <img src={emojiImage} alt=\"Emoji\" />\n        </div>\n        <div className=\"right-col\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter üòä...\"\n            onChange={onChangeHandler}\n          />\n          <p>\n            {emoji} {emojiMean}\n          </p>\n\n          <div className=\"emojiListContainer\">\n            {emojiList.map((emoji) => (\n              <span key={emoji} onClick={() => clickEventHandler(emoji)}>\n                {emoji}\n              </span>\n            ))}\n          </div>\n        </div>\n      </main>\n\n      <footer>\n        <p>Designed By Badjatya ‚ù§Ô∏è</p>\n        <a href=\"https://www.linkedin.com/in/badjatya/\">\n          <i class=\"fab fa-linkedin\"></i>\n        </a>\n        <a href=\"https://twitter.com/ArchitBadjatya\">\n          <i class=\"fab fa-twitter\"></i>\n        </a>\n        <a href=\"https://github.com/badjatya\">\n          <i class=\"fab fa-github\"></i>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}